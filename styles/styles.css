/*The Referer HTTP header contains*/
/*information about the address or*/
/*URL of a page that a user might*/
/*be visiting from. This information*/
/*can be used in analytics to track*/
/*how many users from your page*/
/*visit freecodecamp.org, for example.*/
/*Setting the rel attribute to*/
/*noreferrer omits this information*/
/*from the HTTP request. Give your*/
/*a element a rel attribute set to*/
/*noreferrer.*/



*,
::before,
::after {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

html {
    font-size: 62.5%;
}

body {
    font-family: 'Baskervville', serif;
    color: linen;
    background-color: rgb(20, 30, 40);
}

h1 {
    font-family: 'Anton', sans-serif;
}

h2, h3, h4, h5, h6 {
    font-family: 'Raleway', sans-serif;
}

a {
    text-decoration: none;
    color: linen;
}

main {
    display: grid;
    grid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);
    row-gap: 3rem;
}

/*Create an img selector and give it a width*/
/*property set to 100%, and an object-fit */
/*property set to cover.*/
/*The object-fit property tells the browser*/
/*how to position the element within its*/
/*container. In this case, cover will set*/
/*the image to fill the container, cropping*/
/*as needed to avoid changing the aspect ratio*/

img {
    width: 100%;
    object-fit: cover;
}

hr {
    margin: 1.5rem 0;
    border: 1px solid rgba(120, 120, 120, 0.6);
}

.heading {
    grid-column: 2 / 3;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    row-gap: 1.5rem;
}

.text {
    grid-column: 2 / 3;
    font-size: 1.8rem;
    letter-spacing: 0.6px;
    column-width: 25rem;
    text-align: justify;
}

.hero {
    grid-column: 1 / -1;
    position: relative;
}

.hero-title {
    text-align: center;
    color: orangered;
    font-size: 8rem;
}

.hero-subtitle {
    font-size: 2.4rem;
    color: orangered;
    text-align: center;
}

.author {
    font-size: 2rem;
    font-family: "Raleway", sans-serif;
}

.author-name a:hover {
    background-color: #306203;
}

.publish-date {
    color: rgba(255, 255, 255, 0.5);
}

/*If you wanted to add more social icons,*/
/*but keep them on the same row, you would*/
/*need to update grid-template-columns to*/
/*create additional columns. As an alternative,*/
/*you can use the grid-auto-flow property.*/

/*This property takes either row or column*/
/*as the first value, with an optional second*/
/*value of dense. grid-auto-flow uses an*/
/*auto-placement algorithm to adjust the*/
/*grid layout. Setting it to column will*/
/*tell the algorithm to create new columns*/
/*for content as needed. The dense value*/
/*allows the algorithm to backtrack and fill*/
/*holes in the grid with smaller items,*/
/*which can result in items appearing out of order.*/

/*For your .social-icons selector, set the*/
/*grid-auto-flow property to column.*/

.social-icons {
    display: grid;
    font-size: 3rem;
    grid-template-columns: repeat(5, 1fr);
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
    align-items: center;
}

.first-paragraph::first-letter {
    font-size: 6rem;
    color: orangered;
    float: left;
    margin-right: 1rem;
}

.quote {
    color: #00beef;
    font-size: 2.4rem;
    text-align: center;
    font-family: "Raleway", sans-serif;
}

.quote::before {
    content: '" ';
}

.quote::after {
    content: ' "';
}

/*Now the auto-placement algorithm will kick*/
/*in when you add a new icon element. However,*/
/*the algorithm defaults the new column*/
/*width to be auto, which will not match*/
/*your current columns.*/

/*You can override this with the*/
/*grid-auto-columns property. Give*/
/*the .social-icons selector a*/
/*grid-auto-columns property set to 1fr.*/


.text-with-images {
    display: grid;
    grid-template-columns: 1fr 2fr;
    column-gap: 3rem;
    margin-bottom: 3rem;
}

.lists {
    list-style-type: none;
    margin-top: 2rem;
}

.lists li {
    margin-bottom: 1.5rem;
}

.list-title, .list-subtitle {
    color: #00beef;
}

/*The place-items property can be used to*/
/*set the align-items and justify-items*/
/*values at the same time. The place-items*/
/*property takes one or two values. If one*/
/*value is provided, it is used for both*/
/*the align-items and justify-items properties.*/
/*If two values are provided, the first*/
/*value is used for the align-items property*/
/*and the second value is used for the*/
/*justify-items property.*/
/*Give the .image-wrapper selector a*/
/*place-items property set to center.*/

.image-wrapper {
    display: grid;
    grid-template-columns: 2fr 1fr;
    grid-template-rows: repeat(3, min-content);
    gap: 2rem;
    place-items: center;
}

.image-1, .image-3 {
    grid-column: 1 / -1;
}

@media only screen and (max-width: 720px) {
    .image-wrapper {
        grid-template-columns: 1fr;
    }
}

@media only screen and (max-width: 600px) {
    .text-with-images {
        grid-template-columns: 1fr;
    }
}

@media only screen and (max-width: 550px) {
    .hero-title {
        font-size: 6rem;
    }

    .hero-subtitle,
    .author,
    .quote,
    .list-title {
        font-size: 1.8rem;
    }

    .social-icons {
        font-size: 2rem;
    }

    .text {
        font-size: 1.6rem;
    }
}
@media only screen and (max-width:420px){
    .hero-title{
        font-size:4.5rem;
    }
}